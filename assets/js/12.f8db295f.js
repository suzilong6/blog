(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{295:function(a,e,t){a.exports=t.p+"assets/img/1.c7a4ed6f.png"},349:function(a,e,t){"use strict";t.r(e);var v=t(13),_=Object(v.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"webpack工作原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack工作原理"}},[a._v("#")]),a._v(" webpack工作原理")]),a._v(" "),e("h2",{attrs:{id:"基本概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[a._v("#")]),a._v(" 基本概念")]),a._v(" "),e("p",[a._v("在了解webpack原理前，我们需要掌握以下几个核心概念，以方便后面的理解。")]),a._v(" "),e("ul",[e("li",[a._v("entry：入口，webpack执行构建的第一步将从entry开始，可以抽象成输入。")]),a._v(" "),e("li",[a._v("module：模块，在webpack里一切皆模块，一个模块对应一个文件。webpack会从配置的entry开始，递归找出所有依赖的模块。")]),a._v(" "),e("li",[a._v("chunk：代码块，一个chunk由一个或多个模块组成，用于代码合并于分割。")]),a._v(" "),e("li",[a._v("loader：加载器，用于将模块的原内容按照需求转换成新内容。")]),a._v(" "),e("li",[a._v("plugin：插件，在webpack构建流程中的特定时机会广播对应的事件，插件可以监听这些事件的发生，在特定的时机做对应的事情。")])]),a._v(" "),e("h2",{attrs:{id:"流程概括"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#流程概括"}},[a._v("#")]),a._v(" 流程概括")]),a._v(" "),e("p",[a._v("webpack的运行流程是一个串行的过程，从启动到结束会依次执行以下流程。")]),a._v(" "),e("ul",[e("li",[a._v("初始化参数：从配置文件和shell语句中读取与合并参数，得到最终的参数。")]),a._v(" "),e("li",[a._v("开始编译：用上一步得到的参数初始化compiler对象，加载所有配置的插件，通过执行对象的run方法开始执行编译。")]),a._v(" "),e("li",[a._v("确定入口：根据配置中的entry找出所有入口文件。")]),a._v(" "),e("li",[a._v("编译模块：从入口模块出发，调用所有配置的loader对模块进行翻译，再找出该模块依赖的模块，再递归本步骤直到所有入口依赖的文件都经过本步骤的处理。")]),a._v(" "),e("li",[a._v("完成模块编译：在经过上一步使用loader翻译完所有模块后，得到了每个模块被翻译后的最终内容及它们之间的依赖关系。")]),a._v(" "),e("li",[a._v("输出资源：根据入口和模块之间的依赖关系，组装成一个个包含多个模块的chunk，再将每个chunk转换成一个单独的文件加入到输出列表中，这是可以修改输出内容的最后机会。")]),a._v(" "),e("li",[a._v("输出完成：在确定好输出内容后，根据配置确定输出的路径和文件名，将文件的内容写入文件系统中。")])]),a._v(" "),e("p",[a._v("在以上过程中，webpack会在特定的时间点广播特定的事件，插件在监听到感兴趣的事件后会执行特定的逻辑，并且插件可以调用webpack的api改变webpack的运行结果。")]),a._v(" "),e("h2",{attrs:{id:"流程细节"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#流程细节"}},[a._v("#")]),a._v(" 流程细节")]),a._v(" "),e("p",[a._v("webpack的构建流程可以分为以下三大阶段。")]),a._v(" "),e("ul",[e("li",[a._v("初始化：启动构建，读取与合并配置参数，加载plugin，实例化compiler。")]),a._v(" "),e("li",[a._v("编译：从entry出发，针对每个module串行调用对应的loader去翻译文件的内容，再通过module依赖的module，递归的进行翻译处理。")]),a._v(" "),e("li",[a._v("输出：将编译后的module组合成chunk，将chunk转换成文件，输出到文件系统中。")])]),a._v(" "),e("p",[a._v("如果只执行一次构建，则将以上步骤按顺序各执行一次。但在开启监听模式下，流程将变为如图所示：\n"),e("img",{attrs:{src:t(295),width:"500px"}})])])}),[],!1,null,null,null);e.default=_.exports}}]);